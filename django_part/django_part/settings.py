"""
Django settings for django_part project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# SECURITY WARNING: don't run with debug turned on in production!
# It's ok for social gaming!
DEBUG = True
subdomain_ngrok = "SUBDOMAIN_NGROK"
token_ngrok = "TOKEN_NGROK"
subdomain_serveo = "SUBDOMAIN_SERVEO"
network_print = False
use_ngrok = True



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'social_gaming_insecure_1234567890'

# In theory it should only be some hosts, which are allowed but it's easier for testing
ALLOWED_HOSTS = [
    "*", # this allows all hosts... in best case remove it
    "127.0.0.1", "127.0.0.1:8000",
    "localhost",
    subdomain_ngrok,
    subdomain_serveo
]
CSRF_TRUSTED_ORIGINS = [
    f"https://{subdomain_ngrok}",
    f"http://{subdomain_ngrok}",
    f"ws://{subdomain_ngrok}",
    f"https://{subdomain_serveo}",
    f"http://{subdomain_serveo}",
    f"ws://{subdomain_serveo}",

]
''''''
# Application definition

INSTALLED_APPS = [
    "daphne",
    'WSSGTemplate',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_part.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
ASGI_APPLICATION = "django_part.asgi.application"
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',  # You can use Redis or other backends as well
    },
}
WSGI_APPLICATION = 'django_part.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
# These default password validators are great for a server used by actual
# users where security is very important. But actual users are not expected
# to use your server in the Social Gaming lab-course. During development
# these validators can be quite annoying because it takes longer to create
# test users, so they have been commented out.
AUTH_PASSWORD_VALIDATORS = [
    #   {
    #       'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    #   },
    #   {
    #       'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    #   },
    #   {
    #       'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    #   },
    #   {
    #       'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    #   },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = "/images/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
MEDIA_ROOT = os.path.join(BASE_DIR, 'static', 'images')
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'error.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"
